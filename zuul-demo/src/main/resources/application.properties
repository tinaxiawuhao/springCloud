spring.application.name=zuul-demo
server.port=2103

eureka.client.serviceUrl.defaultZone= http://yonghuming:123456@localhost:8761/eureka/
# 采用IP注册
eureka.instance.preferIpAddress=true
# 定义实例ID格式
eureka.instance.instance-id=${spring.application.name}:${spring.cloud.client.ip-address}:${server.port}

#zuul.routes.hystrix-feign-demo.path=/hystrix-feign-demo-test/**
#zuul.routes.biancheng.url=http://c.biancheng.net

zuul.routes.fsh-substitution.path=/api/**
zuul.routes.fsh-substitution.url=forward:/local

#zuul.prefix=/rest

#zuul.IpFilter.pre.disable=false

#在属性文件中开启重试机制以及配置重试次数：
zuul.retryable=true
# 请求连接的超时时间
ribbon.ConnectTimeout=500
# 请求处理的超时时间
ribbon.ReadTimeout=5000
#配置重试次数等信息：
# 对当前实例的重试次数
ribbon.maxAutoRetries=1
# 切换实例的重试次数
ribbon.maxAutoRetriesNextServer=3
# 对所有操作请求都进行重试
ribbon.okToRetryOnAllOperations=true
# 对Http响应码进行重试
ribbon.retryableStatusCodes=500,404,502

# 当 @EnableZuulProxy 与 Spring Boot Actuator 配合使用时，Zuul 会暴露一个路由管理端点 /routes。借助这个端点，可以方便、直观地查看以及管理 Zuul 的路由。
#将所有端点都暴露出来，在 application.properties 配置文件中增加以下配置：
#http://localhost:2103/actuator/routes 可以显示所有路由信息
#/fliters 端点会返回 Zuul 中所有过滤器的信息。可以清楚地了解 Zuul 中目前有哪些过滤器，哪些过滤器被禁用了等详细信息。
#访问 http://localhost:2103/actuator/filters 可以显示所有过滤器信息，如图 2 所示。
management.endpoints.web.exposure.include=*

#可以在配置文件中配置“zuul.debug.request=true”开启 DebugFilter 过滤器。
zuul.debug.request=true
# 核心代码在于 this.zuulProperties.isIncludeDebugHeader()，只有满足这个条件才会把 RequestContext 中的调试信息作为响应头输出，在配置文件中增加下面的配置即可：
zuul.include-debug-header=true
spring.application.name= sleuth-article-service
server.port=8095

eureka.client.serviceUrl.defaultZone=http://yonghuming:123456@localhost:8761/eureka/
# 采用IP注册
eureka.instance.preferIpAddress=true
# 定义实例ID格式
eureka.instance.instance-id=${spring.application.name}:${spring.cloud.client.ip-address}:${server.port}

# 配置 zipKin Server 的地址
#去掉之前配置的 spring.zipkin.base-url。因为我们现在利用 RabbitMq 来发送数据了，所以这个配置就不需要了。
#spring.zipkin.base-url=http://127.0.0.1:9411

#在实际使用中可能调用了 10 次接口，但是 Zipkin 中只有一条数据，这是因为收集信息是有一定比例的，这并不是 bug。Zipkin 中的数据条数与调用接口次数默认比例是 0.1，当然我们也可以通过配置来修改这个比例值：
#zipkin 抽样比例
#之所以有这样的一个配置，是因为在高并发下，如果所有数据都采集，那这个数据量就太大了，采用抽样的做法可以减少一部分数据量，特别是对于 Http 方式去发送采集数据，对性能有很大的影响。
spring.sleuth.sampler.probability=1.0

# 修改zipkin的数据发送方式为RabbitMq
spring.zipkin.sender.type=RABBIT
# rabbitmq 配置
spring.rabbitmq.addresses=amqp://localhost:5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest

#数据发送方已经采用 RabbitMq 来发送调用链数据，但是 Zipkin 服务并不知道 RabbitMq 的信息，所以我们在启动 Zipkin 服务的时候需要指定 RabbitMq 的信息。
#java -DRABBIT_ADDRESSES=localhost:5672 - DRABBIT_USER=guest -DRABBIT_PASSWORD=guest -jar zipkin.jar
#启动 Zipkin 的时候指定存储类型为 ES，指定 ES 的 URL 信息：
#java -DSTORAGE_TYPE=elasticsearch -DES_HOSTS=http://localhost:9200 -DRABBIT_ADDRESSES=192.168.10.124:5672 -DRABBIT_USER=guest -DRABBIT_PASSWORD=guest -jar zipkin.jar
#http://localhost:9411/zipkin/